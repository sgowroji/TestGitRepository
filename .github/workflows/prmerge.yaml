name: Comment on Approved PRs

on:
  schedule:
    - cron: '*/2 * * * *' 

jobs:
  comment-on-approved-prs:
    runs-on: ubuntu-latest
    permissions:
     pull-requests: write

    steps:
    - uses: actions/checkout@v2
    - name: Get approved pull requests older than a day
      id: get_old_prs
      run: |
        echo "::set-output name=old_prs::$(curl -s -H 'Accept: application/vnd.github.v3+json' https://api.github.com/repos/${{ github.repository }}/pulls?state=closed&sort=updated&direction=desc | jq '.[] | select(.merged_at != null and (.labels[].name | contains(\"do not merge\")) | not and .reviews[]? | select(.state == \"APPROVED\" and .submitted_at < (now - 86400 | gmtime | strftime(\"%Y-%m-%dT%H:%M:%SZ\")))) | {number: .number, created_at: .created_at, user: .user.login, head_sha: .head.sha, merged_at: .merged_at, approved_reviewers: [ .requested_reviewers[]?.login, .reviews[]? | select(.state == \"APPROVED\") | .user.login ] | unique }' | jq -s '.')"

    - name: Comment on approved PRs after a day
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prs = ${{ steps.get_prs.outputs.prs }};
          const now = new Date();
          const dayInMillis = 1000 * 60 * 60 * 24;
          for (const pr of prs) {
            const mergedAt = new Date(pr.merged_at);
            if (now - mergedAt >= dayInMillis) {
              const comment = `This pull request was approved and merged more than a day ago. Thank you for your contribution! :smile: :+1:`;
              await github.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: comment
              });
            }
          }
